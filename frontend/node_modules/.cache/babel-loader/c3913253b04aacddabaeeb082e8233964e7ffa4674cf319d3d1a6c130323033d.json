{"ast":null,"code":"var _jsxFileName = \"/home/alt/Desktop/ChatBot/AI-ChatBot/frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport ChatBox from \"./components/ChatBox\";\nimport ThoughtGraph from \"./components/ThoughtGraph\";\nimport { BiReset } from \"react-icons/bi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  var _messages$find;\n  const [messages, setMessages] = useState([]);\n  const [currentGraph, setCurrentGraph] = useState(null);\n  const [chatWidth, setChatWidth] = useState(100);\n  const [conversationTitle, setConversationTitle] = useState(\"New Conversation\");\n  const [loading, setLoading] = useState(false); // New loading state\n\n  const isResizing = useRef(false);\n  const lastChatWidth = useRef(chatWidth);\n  const dividerRef = useRef();\n  useEffect(() => {\n    const firstUserMsg = messages.find(m => m.sender === \"user\");\n    if (firstUserMsg) {\n      const truncated = firstUserMsg.text.length > 60 ? firstUserMsg.text.slice(0, 60) + \"...\" : firstUserMsg.text;\n      setConversationTitle(truncated);\n    } else {\n      setConversationTitle(\"New Conversation\");\n    }\n  }, [messages]);\n\n  /**\n   * Toggle the chain-of-thought panel\n   */\n  const handleToggleGraph = messageId => {\n    setCurrentGraph(prev => prev === messageId ? null : messageId);\n    if (currentGraph === messageId) {\n      setChatWidth(100);\n    } else {\n      setChatWidth(60);\n    }\n  };\n\n  /**\n   * Handle new user message, call the backend for AI response\n   */\n  const handleNewMessage = async text => {\n    const userMsg = {\n      id: messages.length + 1,\n      text,\n      sender: \"user\",\n      timestamp: new Date().toLocaleTimeString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false\n      })\n    };\n    setMessages(prev => [...prev, userMsg]);\n    setLoading(true); // Start loading\n\n    try {\n      const resp = await fetch(\"http://127.0.0.1:8000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: text\n        })\n      });\n      const data = await resp.json(); // { text, reasoning }\n\n      const aiMsg = {\n        id: userMsg.id + 1,\n        text: data.text,\n        sender: \"ai\",\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false\n        }),\n        reasoning: data.reasoning || []\n      };\n      setMessages(prev => [...prev, aiMsg]);\n    } catch (error) {\n      const errorMsg = {\n        id: userMsg.id + 1,\n        text: `Error connecting to backend: ${error.message}`,\n        sender: \"ai\",\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false\n        }),\n        reasoning: []\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    } finally {\n      setLoading(false);\n    }\n    setCurrentGraph(null);\n    setChatWidth(100);\n  };\n\n  /**\n   * Divider resizing logic\n   */\n  const handleMouseMove = e => {\n    if (!isResizing.current) return;\n\n    // Calculate the new width as a percentage of the window width\n    const newWidth = e.clientX / window.innerWidth * 100;\n\n    // Enforce minimum and maximum width limits (20% to 80%)\n    if (newWidth >= 20 && newWidth <= 80) {\n      dividerRef.current.style.left = `${newWidth}%`;\n      lastChatWidth.current = newWidth; // Store the latest width\n    }\n  };\n  const handleMouseUp = () => {\n    if (!isResizing.current) return;\n    isResizing.current = false; // Stop resizing\n    setChatWidth(lastChatWidth.current); // Apply the final width\n\n    // Remove event listeners for mouse move and mouse up\n    document.removeEventListener(\"mousemove\", handleMouseMove);\n    document.removeEventListener(\"mouseup\", handleMouseUp);\n  };\n  const handleMouseDown = () => {\n    if (!currentGraph) return;\n    isResizing.current = true; // Start resizing\n\n    // Add event listeners for mouse move and mouse up\n    document.addEventListener(\"mousemove\", handleMouseMove);\n    document.addEventListener(\"mouseup\", handleMouseUp);\n  };\n\n  /*\n  * Reset chat context and frontend messages\n  */\n  const handleResetContext = async () => {\n    try {\n      // Call the backend reset endpoint\n      const response = await fetch(\"http://127.0.0.1:8000/reset\", {\n        method: \"POST\"\n      });\n      if (response.ok) {\n        // Clear the messages state to reset the frontend\n        setMessages([]);\n      } else {\n        console.error(\"Failed to reset backend context:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error resetting context:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen w-screen flex flex-col bg-[#0f0f0f] text-gray-200 overflow-hidden\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-[#1a1a1a] p-4 border-none sticky top-0 z-50 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-semibold truncate\",\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetContext,\n        className: \"p-2 bg-black-600 text-white rounded-full hover:bg-gray-600 transition\",\n        title: \"Reset Conversation\",\n        children: /*#__PURE__*/_jsxDEV(BiReset, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-1 relative overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-none transition-all duration-500 ease-in-out\",\n        style: {\n          width: `${chatWidth}%`\n        },\n        children: /*#__PURE__*/_jsxDEV(ChatBox, {\n          messages: messages,\n          currentGraph: currentGraph,\n          onShowGraph: handleToggleGraph,\n          onNewMessage: handleNewMessage,\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), currentGraph && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dividerRef,\n        className: \"absolute top-0 bottom-0 w-2 bg-[#2b2b2b] cursor-col-resize z-40 hover:bg-[#404040]\",\n        style: {\n          left: `${chatWidth}%`\n        },\n        onMouseDown: handleMouseDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), currentGraph && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-none transition-all duration-500 ease-in-out bg-[#1a1a1a] overflow-y-auto h-full z-30\",\n        style: {\n          width: `${100 - chatWidth}%`\n        },\n        children: /*#__PURE__*/_jsxDEV(ThoughtGraph, {\n          reasoning: ((_messages$find = messages.find(msg => msg.id === currentGraph)) === null || _messages$find === void 0 ? void 0 : _messages$find.reasoning) || []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sqi/S69H/a6MmNaZaAHZ1BsAqZQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ChatBox","ThoughtGraph","BiReset","jsxDEV","_jsxDEV","App","_s","_messages$find","messages","setMessages","currentGraph","setCurrentGraph","chatWidth","setChatWidth","conversationTitle","setConversationTitle","loading","setLoading","isResizing","lastChatWidth","dividerRef","firstUserMsg","find","m","sender","truncated","text","length","slice","handleToggleGraph","messageId","prev","handleNewMessage","userMsg","id","timestamp","Date","toLocaleTimeString","hour","minute","hour12","resp","fetch","method","headers","body","JSON","stringify","message","data","json","aiMsg","reasoning","error","errorMsg","handleMouseMove","e","current","newWidth","clientX","window","innerWidth","style","left","handleMouseUp","document","removeEventListener","handleMouseDown","addEventListener","handleResetContext","response","ok","console","statusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","size","width","onShowGraph","onNewMessage","ref","onMouseDown","msg","_c","$RefreshReg$"],"sources":["/home/alt/Desktop/ChatBot/AI-ChatBot/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport ChatBox from \"./components/ChatBox\";\nimport ThoughtGraph from \"./components/ThoughtGraph\";\nimport { BiReset } from \"react-icons/bi\";\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [currentGraph, setCurrentGraph] = useState(null);\n  const [chatWidth, setChatWidth] = useState(100);\n  const [conversationTitle, setConversationTitle] = useState(\"New Conversation\");\n  const [loading, setLoading] = useState(false); // New loading state\n\n  const isResizing = useRef(false);\n  const lastChatWidth = useRef(chatWidth);\n  const dividerRef = useRef();\n\n\n  useEffect(() => {\n    const firstUserMsg = messages.find((m) => m.sender === \"user\");\n    if (firstUserMsg) {\n      const truncated =\n        firstUserMsg.text.length > 60\n          ? firstUserMsg.text.slice(0, 60) + \"...\"\n          : firstUserMsg.text;\n      setConversationTitle(truncated);\n    } else {\n      setConversationTitle(\"New Conversation\");\n    }\n  }, [messages]);\n\n  /**\n   * Toggle the chain-of-thought panel\n   */\n  const handleToggleGraph = (messageId) => {\n    setCurrentGraph((prev) => (prev === messageId ? null : messageId));\n    if (currentGraph === messageId) {\n      setChatWidth(100);\n    } else {\n      setChatWidth(60);\n    }\n  };\n\n  /**\n   * Handle new user message, call the backend for AI response\n   */\n  const handleNewMessage = async (text) => {\n    const userMsg = {\n      id: messages.length + 1,\n      text,\n      sender: \"user\",\n      timestamp: new Date().toLocaleTimeString([], {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        hour12: false,\n      }),\n    };\n\n    setMessages((prev) => [...prev, userMsg]);\n    setLoading(true); // Start loading\n\n    try {\n        const resp = await fetch(\"http://127.0.0.1:8000/chat\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ message: text }),\n      });\n      const data = await resp.json(); // { text, reasoning }\n\n      const aiMsg = {\n        id: userMsg.id + 1,\n        text: data.text,\n        sender: \"ai\",\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false,\n        }),\n        reasoning: data.reasoning || [],\n      };\n\n      setMessages((prev) => [...prev, aiMsg]);\n    } catch (error) {\n      const errorMsg = {\n        id: userMsg.id + 1,\n        text: `Error connecting to backend: ${error.message}`,\n        sender: \"ai\",\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false,\n        }),\n        reasoning: [],\n      };\n      setMessages((prev) => [...prev, errorMsg]);\n    }  finally {\n      setLoading(false); \n    }\n\n    setCurrentGraph(null);\n    setChatWidth(100);\n  };\n\n  /**\n   * Divider resizing logic\n   */\n  const handleMouseMove = (e) => {\n    if (!isResizing.current) return;\n\n    // Calculate the new width as a percentage of the window width\n    const newWidth = (e.clientX / window.innerWidth) * 100;\n\n    // Enforce minimum and maximum width limits (20% to 80%)\n    if (newWidth >= 20 && newWidth <= 80) {\n      dividerRef.current.style.left = `${newWidth}%`;\n      lastChatWidth.current = newWidth; // Store the latest width\n    }\n  };\n\n  const handleMouseUp = () => {\n    if (!isResizing.current) return;\n\n    isResizing.current = false; // Stop resizing\n    setChatWidth(lastChatWidth.current); // Apply the final width\n\n    // Remove event listeners for mouse move and mouse up\n    document.removeEventListener(\"mousemove\", handleMouseMove);\n    document.removeEventListener(\"mouseup\", handleMouseUp);\n  };\n\n  const handleMouseDown = () => {\n    if (!currentGraph) return;\n\n    isResizing.current = true; // Start resizing\n\n    // Add event listeners for mouse move and mouse up\n    document.addEventListener(\"mousemove\", handleMouseMove);\n    document.addEventListener(\"mouseup\", handleMouseUp);\n  };\n\n  /*\n  * Reset chat context and frontend messages\n  */\n  const handleResetContext = async () => {\n    try {\n      // Call the backend reset endpoint\n      const response = await fetch(\"http://127.0.0.1:8000/reset\", { method: \"POST\" });\n      if (response.ok) {\n        // Clear the messages state to reset the frontend\n        setMessages([]);\n      } else {\n        console.error(\"Failed to reset backend context:\", response.statusText);\n      }\n    } catch (error) {\n      console.error(\"Error resetting context:\", error);\n    }\n  };\n  \n  return (\n    <div className=\"h-screen w-screen flex flex-col bg-[#0f0f0f] text-gray-200 overflow-hidden\">\n      {/* Header with reset button */}\n      <header className=\"bg-[#1a1a1a] p-4 border-none sticky top-0 z-50 flex justify-between items-center\">\n        <h1 className=\"text-xl font-semibold truncate\">Chat</h1>\n        <button\n          onClick={handleResetContext}\n          className=\"p-2 bg-black-600 text-white rounded-full hover:bg-gray-600 transition\"\n          title=\"Reset Conversation\"\n        >\n          <BiReset size={20} />\n        </button>\n      </header>\n\n      <div className=\"flex flex-1 relative overflow-hidden\">\n        <div\n          className=\"flex-none transition-all duration-500 ease-in-out\"\n          style={{ width: `${chatWidth}%` }}\n        >\n          <ChatBox\n            messages={messages}\n            currentGraph={currentGraph}\n            onShowGraph={handleToggleGraph}\n            onNewMessage={handleNewMessage}\n            loading={loading}\n          />\n        </div>\n\n        {currentGraph && (\n          <div\n            ref={dividerRef}\n            className=\"absolute top-0 bottom-0 w-2 bg-[#2b2b2b] cursor-col-resize z-40 hover:bg-[#404040]\"\n            style={{ left: `${chatWidth}%` }}\n            onMouseDown={handleMouseDown}\n          />\n        )}\n\n        {currentGraph && (\n          <div\n            className=\"flex-none transition-all duration-500 ease-in-out bg-[#1a1a1a] overflow-y-auto h-full z-30\"\n            style={{ width: `${100 - chatWidth}%` }}\n          >\n            <ThoughtGraph\n              reasoning={\n                messages.find((msg) => msg.id === currentGraph)?.reasoning || []\n              }\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,OAAO,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,cAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,GAAG,CAAC;EAC/C,MAAM,CAACiB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlB,QAAQ,CAAC,kBAAkB,CAAC;EAC9E,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C,MAAMqB,UAAU,GAAGpB,MAAM,CAAC,KAAK,CAAC;EAChC,MAAMqB,aAAa,GAAGrB,MAAM,CAACc,SAAS,CAAC;EACvC,MAAMQ,UAAU,GAAGtB,MAAM,CAAC,CAAC;EAG3BC,SAAS,CAAC,MAAM;IACd,MAAMsB,YAAY,GAAGb,QAAQ,CAACc,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,KAAK,MAAM,CAAC;IAC9D,IAAIH,YAAY,EAAE;MAChB,MAAMI,SAAS,GACbJ,YAAY,CAACK,IAAI,CAACC,MAAM,GAAG,EAAE,GACzBN,YAAY,CAACK,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,GACtCP,YAAY,CAACK,IAAI;MACvBX,oBAAoB,CAACU,SAAS,CAAC;IACjC,CAAC,MAAM;MACLV,oBAAoB,CAAC,kBAAkB,CAAC;IAC1C;EACF,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;;EAEd;AACF;AACA;EACE,MAAMqB,iBAAiB,GAAIC,SAAS,IAAK;IACvCnB,eAAe,CAAEoB,IAAI,IAAMA,IAAI,KAAKD,SAAS,GAAG,IAAI,GAAGA,SAAU,CAAC;IAClE,IAAIpB,YAAY,KAAKoB,SAAS,EAAE;MAC9BjB,YAAY,CAAC,GAAG,CAAC;IACnB,CAAC,MAAM;MACLA,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;;EAED;AACF;AACA;EACE,MAAMmB,gBAAgB,GAAG,MAAON,IAAI,IAAK;IACvC,MAAMO,OAAO,GAAG;MACdC,EAAE,EAAE1B,QAAQ,CAACmB,MAAM,GAAG,CAAC;MACvBD,IAAI;MACJF,MAAM,EAAE,MAAM;MACdW,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;QAC3CC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE,SAAS;QACjBC,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IAED/B,WAAW,CAAEsB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEE,OAAO,CAAC,CAAC;IACzChB,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;;IAElB,IAAI;MACA,MAAMwB,IAAI,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;QACvDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAEtB;QAAK,CAAC;MACxC,CAAC,CAAC;MACF,MAAMuB,IAAI,GAAG,MAAMR,IAAI,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;;MAEhC,MAAMC,KAAK,GAAG;QACZjB,EAAE,EAAED,OAAO,CAACC,EAAE,GAAG,CAAC;QAClBR,IAAI,EAAEuB,IAAI,CAACvB,IAAI;QACfF,MAAM,EAAE,IAAI;QACZW,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;UAC3CC,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE,SAAS;UACjBC,MAAM,EAAE;QACV,CAAC,CAAC;QACFY,SAAS,EAAEH,IAAI,CAACG,SAAS,IAAI;MAC/B,CAAC;MAED3C,WAAW,CAAEsB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEoB,KAAK,CAAC,CAAC;IACzC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd,MAAMC,QAAQ,GAAG;QACfpB,EAAE,EAAED,OAAO,CAACC,EAAE,GAAG,CAAC;QAClBR,IAAI,EAAE,gCAAgC2B,KAAK,CAACL,OAAO,EAAE;QACrDxB,MAAM,EAAE,IAAI;QACZW,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;UAC3CC,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE,SAAS;UACjBC,MAAM,EAAE;QACV,CAAC,CAAC;QACFY,SAAS,EAAE;MACb,CAAC;MACD3C,WAAW,CAAEsB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEuB,QAAQ,CAAC,CAAC;IAC5C,CAAC,SAAU;MACTrC,UAAU,CAAC,KAAK,CAAC;IACnB;IAEAN,eAAe,CAAC,IAAI,CAAC;IACrBE,YAAY,CAAC,GAAG,CAAC;EACnB,CAAC;;EAED;AACF;AACA;EACE,MAAM0C,eAAe,GAAIC,CAAC,IAAK;IAC7B,IAAI,CAACtC,UAAU,CAACuC,OAAO,EAAE;;IAEzB;IACA,MAAMC,QAAQ,GAAIF,CAAC,CAACG,OAAO,GAAGC,MAAM,CAACC,UAAU,GAAI,GAAG;;IAEtD;IACA,IAAIH,QAAQ,IAAI,EAAE,IAAIA,QAAQ,IAAI,EAAE,EAAE;MACpCtC,UAAU,CAACqC,OAAO,CAACK,KAAK,CAACC,IAAI,GAAG,GAAGL,QAAQ,GAAG;MAC9CvC,aAAa,CAACsC,OAAO,GAAGC,QAAQ,CAAC,CAAC;IACpC;EACF,CAAC;EAED,MAAMM,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAAC9C,UAAU,CAACuC,OAAO,EAAE;IAEzBvC,UAAU,CAACuC,OAAO,GAAG,KAAK,CAAC,CAAC;IAC5B5C,YAAY,CAACM,aAAa,CAACsC,OAAO,CAAC,CAAC,CAAC;;IAErC;IACAQ,QAAQ,CAACC,mBAAmB,CAAC,WAAW,EAAEX,eAAe,CAAC;IAC1DU,QAAQ,CAACC,mBAAmB,CAAC,SAAS,EAAEF,aAAa,CAAC;EACxD,CAAC;EAED,MAAMG,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACzD,YAAY,EAAE;IAEnBQ,UAAU,CAACuC,OAAO,GAAG,IAAI,CAAC,CAAC;;IAE3B;IACAQ,QAAQ,CAACG,gBAAgB,CAAC,WAAW,EAAEb,eAAe,CAAC;IACvDU,QAAQ,CAACG,gBAAgB,CAAC,SAAS,EAAEJ,aAAa,CAAC;EACrD,CAAC;;EAED;AACF;AACA;EACE,MAAMK,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAM5B,KAAK,CAAC,6BAA6B,EAAE;QAAEC,MAAM,EAAE;MAAO,CAAC,CAAC;MAC/E,IAAI2B,QAAQ,CAACC,EAAE,EAAE;QACf;QACA9D,WAAW,CAAC,EAAE,CAAC;MACjB,CAAC,MAAM;QACL+D,OAAO,CAACnB,KAAK,CAAC,kCAAkC,EAAEiB,QAAQ,CAACG,UAAU,CAAC;MACxE;IACF,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACEjD,OAAA;IAAKsE,SAAS,EAAC,4EAA4E;IAAAC,QAAA,gBAEzFvE,OAAA;MAAQsE,SAAS,EAAC,kFAAkF;MAAAC,QAAA,gBAClGvE,OAAA;QAAIsE,SAAS,EAAC,gCAAgC;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxD3E,OAAA;QACE4E,OAAO,EAAEX,kBAAmB;QAC5BK,SAAS,EAAC,uEAAuE;QACjFO,KAAK,EAAC,oBAAoB;QAAAN,QAAA,eAE1BvE,OAAA,CAACF,OAAO;UAACgF,IAAI,EAAE;QAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAET3E,OAAA;MAAKsE,SAAS,EAAC,sCAAsC;MAAAC,QAAA,gBACnDvE,OAAA;QACEsE,SAAS,EAAC,mDAAmD;QAC7DZ,KAAK,EAAE;UAAEqB,KAAK,EAAE,GAAGvE,SAAS;QAAI,CAAE;QAAA+D,QAAA,eAElCvE,OAAA,CAACJ,OAAO;UACNQ,QAAQ,EAAEA,QAAS;UACnBE,YAAY,EAAEA,YAAa;UAC3B0E,WAAW,EAAEvD,iBAAkB;UAC/BwD,YAAY,EAAErD,gBAAiB;UAC/BhB,OAAO,EAAEA;QAAQ;UAAA4D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAELrE,YAAY,iBACXN,OAAA;QACEkF,GAAG,EAAElE,UAAW;QAChBsD,SAAS,EAAC,oFAAoF;QAC9FZ,KAAK,EAAE;UAAEC,IAAI,EAAE,GAAGnD,SAAS;QAAI,CAAE;QACjC2E,WAAW,EAAEpB;MAAgB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CACF,EAEArE,YAAY,iBACXN,OAAA;QACEsE,SAAS,EAAC,4FAA4F;QACtGZ,KAAK,EAAE;UAAEqB,KAAK,EAAE,GAAG,GAAG,GAAGvE,SAAS;QAAI,CAAE;QAAA+D,QAAA,eAExCvE,OAAA,CAACH,YAAY;UACXmD,SAAS,EACP,EAAA7C,cAAA,GAAAC,QAAQ,CAACc,IAAI,CAAEkE,GAAG,IAAKA,GAAG,CAACtD,EAAE,KAAKxB,YAAY,CAAC,cAAAH,cAAA,uBAA/CA,cAAA,CAAiD6C,SAAS,KAAI;QAC/D;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzE,EAAA,CA5MID,GAAG;AAAAoF,EAAA,GAAHpF,GAAG;AA8MT,eAAeA,GAAG;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}